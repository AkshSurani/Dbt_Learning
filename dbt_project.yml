
# # Name your project! Project names should contain only lowercase characters
# # and underscores. A good package name should reflect your organization's
# # name or the intended use of these models
# name: 'SPCH_SF1'
# version: '1.0.0'
# config-version: 2

# # This setting configures which "profile" dbt uses for this project.
# profile: 'default'

# # These configurations specify where dbt should look for different types of files.
# # The `model-paths` config, for example, states that models in this project can be
# # found in the "models/" directory. You probably won't need to change these!
# model-paths: ["models"]
# analysis-paths: ["analyses"]
# test-paths: ["tests"]
# seed-paths: ["seeds"]
# macro-paths: ["macros"]
# snapshot-paths: ["snapshots"]

# target-path: "target"  # directory which will store compiled SQL files
# clean-targets:         # directories to be removed by `dbt clean`
#   - "target"
#   - "dbt_packages"

# # Configuring models
# # Full documentation: https://docs.getdbt.com/docs/configuring-models

# # In dbt, the default materialization for a model is a view. This means, when you run 
# # dbt run or dbt build, all of your models will be built as a view in your data platform. 
# # The configuration below will override this setting for models in the example folder to 
# # instead be materialized as tables. Any models you add to the root of the models folder will 
# # continue to be built as views. These settings can be overridden in the individual model files
# # using the `{{ config(...) }}` macro.

# # Configuring models
# # models:
# #   SPCH_SF1:
# #     staging:
# #       models:
# #       # +schema: "{{ generate_schema_name(custom_schema_name, node) }}"
# #       +schema: STAGING
# #       +materialized: view          # Staging models should be lightweight views

# #     Intermediate:
# #       # +schema: "{{ generate_schema_name(custom_schema_name, node) }}"   # Core/intermediate models go into schema SF1_INTERMEDIATE
# #       +schema: Intermediate
# #       +materialized: table
# #       dim:
# #         +materialized: table       # Dimension tables
# #       fact:
# #         +materialized: table       # Fact tables

# #     Analytics:
# #       # +schema: "{{ generate_schema_name(custom_schema_name, node) }}"       # Final analytics/marts go into schema SF1_ANALYTICS
# #       +schema: Analytics
# #       +materialized: incremental   # Analytics models are incremental for efficiency
      
# models:
#   SPCH_SF1:

#     staging:
#       +materialized: view

#     Intermediate:
#       +materialized: table
#       dim:
#         +materialized: table
#       fact:
#         +materialized: table

#     Analytics:
#       +materialized: incremental








name: 'SPCH_SF1'
version: '1.0.0'
config-version: 2

# ------------------------------
# Project Metadata
# ------------------------------
# This is the main dbt project file.
# It defines how dbt should treat models, seeds, snapshots, and other resources.
# Modify "profile" to point to your dbt profile (connection details in profiles.yml).

profile: 'default'

# ------------------------------
# Project File Paths
# ------------------------------
# These tell dbt where to look for SQL models, macros, seeds, snapshots, etc.
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
docs-paths: ["docs"]

# ------------------------------
# Build & Clean Settings
# ------------------------------
target-path: "target"     # compiled SQL files will be written here
clean-targets:            # folders removed when you run `dbt clean`
  - "target"
  - "dbt_packages"

# ------------------------------
# Model Materialization Strategy
# ------------------------------
# Define how dbt models should be built depending on their folder.
# - Staging models → Views (lightweight, no storage overhead)
# - Intermediate models → Tables (used for transformations/joins)
# - Dimensions / Facts → Tables (core DW structures)
# - Analytics → Incremental (large aggregations refreshed incrementally)
# - Default (any folder not matched) → Views
# ------------------------------
models:
  SPCH_SF1:

    staging:
      +materialized: view
      +schema: staging    # optional schema override

    Intermediate:
      +materialized: table
      dim:
        +materialized: table
        +schema: dim
      fact:
        +materialized: table
        +schema: fact

    Analytics:
      +materialized: incremental
      +schema: analytics

    # Default / catch-all
    +materialized: view

# ------------------------------
# Seed Configurations
# ------------------------------
# Seeds are CSVs that dbt loads into the warehouse as tables.
# Example: seeds/region.csv will become STAGING.region
# ------------------------------
seeds:
  SPCH_SF1:
    region:
      file: "region.csv"
      header: true
      delimiter: ","
      quote: '"'
      schema: staging   # load seed into staging schema
